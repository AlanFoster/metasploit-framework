I"Z<h2 id="learning-git">Learning Git</h2>

<p>The following sites are great references for Git padawans and jedi alike:</p>

<ul>
  <li><a href="http://git.or.cz/course/svn.html">Git-SVN crash course</a>: Lots of good stuff on helping newbies grok the concepts of Git w/ reference to similar concepts in Subversion.</li>
  <li><a href="http://learn.github.com">learn.github.com</a>: GitHub’s own reference site. Includes helpful GitHub-specific information.</li>
  <li><a href="http://gitref.org">Git Reference</a>: From the site: “meant to be a quick reference for learning and remembering the most important and commonly used Git commands.” Follows a tutorial-like format. Great for beginners.</li>
  <li><a href="http://progit.org">The Pro Git Book</a>: A free, online copy of the Pro Git book by GitHubber Scott Chacon.</li>
  <li><a href="http://book.git-scm.com">The Git Community Book</a>: A free book put together by the Git community for those new to Git.</li>
  <li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/">Git Magic</a>: Another free Git book put together by a Stanford CS student.</li>
  <li><a href="http://gitready.com">Git Ready</a>: A collection of Git tips and tricks.</li>
  <li><a href="http://whygitisbetterthanx.com">Why Git is Better Than X</a>: In case you still need convincing, this site breaks down Git vs. other popular SCM packages.</li>
  <li><a href="http://tom.preston-werner.com/2009/05/19/the-git-parable.html">The Git Parable</a>: A story by GitHub founder Tom Preston-Werner that reveals the underlying principles behind Git’s construction. A great starting point for understanding the nature of Git.</li>
  <li><a href="http://nfarina.com/post/9868516270/git-is-simpler">Git is Easier Than You Think</a>: A nice tutorial that breaks down one Git user’s experience switching from Subversion.</li>
  <li><a href="http://peepcode.com/products/git">PeepCode: Git</a>: A one-hour (not-free) screencast covering Git basics. Well-made and easy to follow.</li>
  <li><a href="http://rogerdudler.github.com/git-guide/">Git - The Simple Guide</a>: A simple introductory guide to getting up and running with Git.</li>
  <li><a href="http://scottchacon.com/2011/08/31/github-flow.html">GitHub Flow</a>: Another great post from Scott Chacon describing a GitHub-based workflow for projects.</li>
  <li><a href="http://pragprog.com/screencasts/v-scgithub/insider-guide-to-github">Getting Started with GitHub</a>: Also from GitHub’s own Scott Chacon, this two-part screencast (one free and one paid) will walk you through the basics of using GitHub.</li>
</ul>

<h2 id="using-git-in-editors">Using Git in Editors</h2>

<ul>
  <li>
    <p><a href="https://github.com/tpope/vim-fugitive">Fugitive plugin for Vim</a>: Provides lots of tasty functionality from inside Vim.  There’s also a five-part series on <a href="http://vimcasts.org/episodes/fugitive-vim---a-complement-to-command-line-git/">VimCasts</a> on using Fugitive for almost any git task you can think of.</p>
  </li>
  <li>
    <p>TextMate - a bundle for git ships with the editor.  Highlight your top-level folder in the project drawer and then invoke with Command-Shift-G</p>
  </li>
</ul>

<h2 id="svn-mirroring">SVN mirroring</h2>

<p>Of course, if you’re still having trouble, GitHub does offer <a href="https://github.com/blog/644-subversion-write-support">basic SVN read-write support</a>.</p>
:ET