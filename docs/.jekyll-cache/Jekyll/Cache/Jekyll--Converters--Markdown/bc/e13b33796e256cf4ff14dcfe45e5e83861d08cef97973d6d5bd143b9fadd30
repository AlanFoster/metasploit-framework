I"E<p><strong>Update:</strong> We have automated this process (it runs every Thursday at noon US Central Time), and 99.9% of the time you will not need to follow any of the below steps. That said, if you need to update a gem in a PR, this is still a good procedure to follow.</p>

<p>Sometimes you might want to pull in a new Ruby library or update an existing one to get more functionality. Metasploit leverages <a href="http://bundler.io">Bundler</a> to manage <a href="https://rubygems.org/">Ruby gems</a> and make dependencies easy. This document goes over the things you need to know when updating or adding gems to Metasploit.</p>

<h5 id="the-gemfile">The Gemfile</h5>

<p>Gems that are only <em>sometimes</em> used (say, only in test mode, or only when running with a database) are listed in a relevant Bundler group (<code class="highlighter-rouge">test</code> or <code class="highlighter-rouge">db</code> respectively) in the <a href="https://github.com/rapid7/metasploit-framework/blob/master/Gemfile">root Gemfile</a>.</p>

<h5 id="the-metasploit-frameworkgemspec-file">The metasploit-framework.gemspec file</h5>

<p>Gems that are <em>always needed</em> by Metasploit are kept in the <a href="https://github.com/rapid7/metasploit-framework/blob/master/metasploit-framework.gemspec">metasploit-framework.gemspec</a> file (this file is actually pulled into the Gemfile when calculating dependencies).</p>

<h5 id="the-lock-file">The Lock File</h5>

<p>The <a href="https://github.com/rapid7/metasploit-framework/blob/master/Gemfile.lock">Gemfile.lock file</a> holds the absolute versions of the Gems we want and keeps track of all the subdependencies. You should never need to manually edit this file: bundler will do it for you when you run <code class="highlighter-rouge">bundle install</code> after adding a gem. We keep this committed in the repo to ensure that all users are always on the same gem versions.</p>

<h5 id="updating-or-adding-a-gem">Updating or adding a gem</h5>

<p>If the gem is needed only for a specific Bundler group (like <code class="highlighter-rouge">test</code> or <code class="highlighter-rouge">db</code>), you should update the <a href="https://github.com/rapid7/metasploit-framework/blob/master/Gemfile">Gemfile</a>:</p>

<ol>
  <li>
    <p>Add the Gem you want to the correct Group, or just update the version constraint. Check <a href="http://bundler.io/gemfile.html">Bundler’s docs</a> for the various ways to express version constraints:</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> gem 'my_favorite', '~&gt; 1.0'
</code></pre></div>    </div>
  </li>
  <li>Run <code class="highlighter-rouge">bundle install</code></li>
  <li>Commit any changes to the <code class="highlighter-rouge">Gemfile.lock</code> file</li>
</ol>

<p>If the gem is needed any time metasploit-framework is used, you should update the <a href="https://github.com/rapid7/metasploit-framework/blob/master/metasploit-framework.gemspec">metasploit-framework.gemspec</a> file:</p>

<ol>
  <li>
    <p>Add the gem as a runtime dependency, or just update the version constraint. Check <a href="http://bundler.io/gemfile.html">Bundler’s docs</a> for the various ways to express version constraints:</p>

    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> spec.add_runtime_dependency 'my_favorite_gem', '~&gt; 3.0.1'
</code></pre></div>    </div>
  </li>
  <li>Run <code class="highlighter-rouge">bundle install</code></li>
  <li>Commit any changes to the <code class="highlighter-rouge">Gemfile.lock</code> file.</li>
</ol>

<h5 id="gemfilelocal">Gemfile.local</h5>

<p>A Gemfile.local file is useful for adding temporary gems to the metasploit-framework, like pry-stack-explorer or other handy debugging libs; you don’t want to commit these gems into the repo, but might need them from time to time. To use a Gemfile.local file:</p>

<ol>
  <li>Rename the <a href="https://github.com/rapid7/metasploit-framework/blob/master/Gemfile.local.example">Gemfile.local.example</a> file in the repo root to <code class="highlighter-rouge">Gemfile.local</code></li>
  <li>Add the temporary gems you want to this file</li>
  <li>Run <code class="highlighter-rouge">bundle install</code></li>
  <li>Make sure you <em>do not</em> commit the Gemfile.lock: <code class="highlighter-rouge">git checkout -- Gemfile.lock</code></li>
</ol>
:ET